{"ast":null,"code":"// Share utilities for encoding/decoding expense data in URLs\n// Compress data to make URLs shorter\nexport const compressData=data=>{try{const jsonString=JSON.stringify(data);// Use base64 encoding for better compression\nreturn btoa(unescape(encodeURIComponent(jsonString)));}catch(error){console.error('Error compressing data:',error);return null;}};// Decompress data from URL\nexport const decompressData=compressedData=>{try{const jsonString=decodeURIComponent(escape(atob(compressedData)));return JSON.parse(jsonString);}catch(error){console.error('Error decompressing data:',error);return null;}};// Generate share URL\nexport const generateShareUrl=(members,expenses)=>{const data={members,expenses,version:'1.0',// For future compatibility\ntimestamp:Date.now()};const compressed=compressData(data);if(!compressed)return null;const baseUrl=window.location.origin+window.location.pathname;return\"\".concat(baseUrl,\"?share=\").concat(compressed);};// Extract share data from URL\nexport const extractShareData=()=>{const urlParams=new URLSearchParams(window.location.search);const shareData=urlParams.get('share');if(!shareData)return null;const data=decompressData(shareData);if(!data)return null;return{members:data.members||[],expenses:data.expenses||[]};};// Copy URL to clipboard\nexport const copyToClipboard=async url=>{try{await navigator.clipboard.writeText(url);return true;}catch(error){console.error('Error copying to clipboard:',error);// Fallback for older browsers\nconst textArea=document.createElement('textarea');textArea.value=url;document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);return true;}};// Check if current URL has share data\nexport const hasShareData=()=>{const urlParams=new URLSearchParams(window.location.search);return urlParams.has('share');};// Clear share data from URL (for new sessions)\nexport const clearShareData=()=>{const url=new URL(window.location);url.searchParams.delete('share');window.history.replaceState({},'',url);};","map":{"version":3,"names":["compressData","data","jsonString","JSON","stringify","btoa","unescape","encodeURIComponent","error","console","decompressData","compressedData","decodeURIComponent","escape","atob","parse","generateShareUrl","members","expenses","version","timestamp","Date","now","compressed","baseUrl","window","location","origin","pathname","concat","extractShareData","urlParams","URLSearchParams","search","shareData","get","copyToClipboard","url","navigator","clipboard","writeText","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","hasShareData","has","clearShareData","URL","searchParams","delete","history","replaceState"],"sources":["/home/runner/work/Dang-O-Dong/Dang-O-Dong/src/utils/shareUtils.js"],"sourcesContent":["// Share utilities for encoding/decoding expense data in URLs\n\n// Compress data to make URLs shorter\nexport const compressData = (data) => {\n    try {\n        const jsonString = JSON.stringify(data);\n        // Use base64 encoding for better compression\n        return btoa(unescape(encodeURIComponent(jsonString)));\n    } catch (error) {\n        console.error('Error compressing data:', error);\n        return null;\n    }\n};\n\n// Decompress data from URL\nexport const decompressData = (compressedData) => {\n    try {\n        const jsonString = decodeURIComponent(escape(atob(compressedData)));\n        return JSON.parse(jsonString);\n    } catch (error) {\n        console.error('Error decompressing data:', error);\n        return null;\n    }\n};\n\n// Generate share URL\nexport const generateShareUrl = (members, expenses) => {\n    const data = {\n        members,\n        expenses,\n        version: '1.0', // For future compatibility\n        timestamp: Date.now()\n    };\n\n    const compressed = compressData(data);\n    if (!compressed) return null;\n\n    const baseUrl = window.location.origin + window.location.pathname;\n    return `${baseUrl}?share=${compressed}`;\n};\n\n// Extract share data from URL\nexport const extractShareData = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const shareData = urlParams.get('share');\n\n    if (!shareData) return null;\n\n    const data = decompressData(shareData);\n    if (!data) return null;\n\n    return {\n        members: data.members || [],\n        expenses: data.expenses || []\n    };\n};\n\n// Copy URL to clipboard\nexport const copyToClipboard = async (url) => {\n    try {\n        await navigator.clipboard.writeText(url);\n        return true;\n    } catch (error) {\n        console.error('Error copying to clipboard:', error);\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea');\n        textArea.value = url;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        return true;\n    }\n};\n\n// Check if current URL has share data\nexport const hasShareData = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.has('share');\n};\n\n// Clear share data from URL (for new sessions)\nexport const clearShareData = () => {\n    const url = new URL(window.location);\n    url.searchParams.delete('share');\n    window.history.replaceState({}, '', url);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}