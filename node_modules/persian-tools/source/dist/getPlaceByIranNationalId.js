'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _nationalId = require('./nationalId');

var _nationalId2 = _interopRequireDefault(_nationalId);

var _provincesCodes = require('../dummy/provincesCodes.json');

var _provincesCodes2 = _interopRequireDefault(_provincesCodes);

var _nationalId3 = require('../dummy/nationalId.json');

var _nationalId4 = _interopRequireDefault(_nationalId3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Get Place by Iranian National-Id
 * @method getPlaceByIranNationalId
 * @param  {String?}                 nationalId [String of national id - like this: 1111111111]
 * @return {Object}                             [If nationalId is valid, function returning an object of details, but nationalId is invalid, return error message]
 */
function getPlaceByIranNationalId(nationalId) {
    if (nationalId) {
        if ((0, _nationalId2.default)(nationalId)) {
            var code = nationalId.toString().substring(0, 3);
            var find = _nationalId4.default.filter(function (row) {
                return row.code.indexOf(code) !== -1;
            });

            if (find.length) {
                var findProvinces = _provincesCodes2.default.filter(function (province) {
                    return province.code === find[0].parentCode;
                });

                return {
                    city: find[0].city,
                    province: findProvinces.length ? findProvinces[0].city : 'unkown',
                    codes: find[0].code.indexOf('-') !== -1 ? find[0].code.split('-') : [find[0].code]
                };
            } else {
                return { code: 1, message: "can't find national-id" };
            }
        } else {
            return 'Invalid national-id';
        }
    }
}

exports.default = getPlaceByIranNationalId;